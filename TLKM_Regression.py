# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VmzNHPlp7qfLH1CviKm7kkSCFG93gg8k
"""


import yfinance as yf
import pandas as pd
import numpy as np
saham = 'TLKM.JK'
df = yf.download(saham,start='2016-1-1', end = '2021-9-21')
df

df.shape

df.isnull().sum()

df = df[['Open', 'High', 'Low','Close']]

df_train = df[df.index.year < 2020]
df_test = df[df.index.year>=2020]

df_train

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(0, 1))
df_train_scaled = scaler.fit_transform(df_train)
df_test_scaled = scaler.transform(df_test)

df_train_scaled

from sklearn.linear_model import LinearRegression
LR = LinearRegression()
LR.fit(df_train_scaled[:,:-1], df_train_scaled[:,-1])

y_pred = LR.predict(df_test_scaled[:,:-1])

import matplotlib.pyplot as plt
y_test = df_test_scaled[:,-1]

len(y_test)

np.asarray(y_test).shape

pd.DataFrame(df_test_scaled[:,:-1])

pd.DataFrame(y_pred)

df_test_final = pd.concat([pd.DataFrame(df_test_scaled[:,:-1]),pd.DataFrame(y_pred)], axis = 1)

df_test_final

inv_df_test = scaler.inverse_transform(df_test_final)

y_hat = inv_df_test[:,-1]

df_test.iloc[:,-1]
plt.plot(y_hat,'r', label = 'Predicted')
plt.plot(y_hat,'r', label = 'Predicted')
plt.plot(df_test.iloc[:,-1].values, 'b', label = 'Test_data')
plt.legend()
plt.show()

from sklearn.metrics import mean_squared_error, r2_score
print('MSE', mean_squared_error(df_test['Close'], y_hat))
print('R2', r2_score(df_test['Close'], y_hat))